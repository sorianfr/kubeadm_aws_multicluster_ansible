- name: Initialize Kubernetes Control Plane
  hosts: controlplanes
  become: yes
  vars_files:
    - ../vars.yml
  environment:
    ANSIBLE_HOST_KEY_CHECKING: "False"

  tasks:
    - name: Ensure /etc/kubernetes directory exists
      file:
        path: /etc/kubernetes
        state: directory
        mode: 0755

    - name: Copy kubeadm configuration template
      template:
        src: ../templates/kubeadm-config.yaml.j2
        dest: /etc/kubernetes/kubeadm-config.yaml
        mode: 0644

    - name: Initialize kubeadm
      command: kubeadm init --config=/etc/kubernetes/kubeadm-config.yaml
      args:
        creates: /etc/kubernetes/admin.conf

    - name: Create .kube directory for ubuntu user
      file:
        path: /home/ubuntu/.kube
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: 0755

    - name: Copy kubeconfig to ubuntu user
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/ubuntu/.kube/config
        remote_src: yes
        owner: ubuntu
        group: ubuntu
        mode: 0644
    
    - name: Extract cluster name (e.g. cluster1 from cluster1controlplane)
      set_fact:
        cluster_name: "{{ inventory_hostname | regex_replace('controlplane$', '') }}"

    - name: Generate kubeadm join command
      command: kubeadm token create --print-join-command
      register: join_command_output

    - name: Save join command in global dict by cluster name
      set_fact:
        join_commands: "{{ join_commands | default({}) | combine({ cluster_name: join_command_output.stdout }) }}"
      delegate_to: localhost

    - name: Write join command to file
      copy:
        content: "{{ cluster_name }}={{ join_command_output.stdout }}"
        dest: "/tmp/join_command_{{ cluster_name }}.txt"
      delegate_to: localhost



