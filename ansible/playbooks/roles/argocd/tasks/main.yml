- name: Create namespace for Argo CD
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    context: "{{ kube_context }}"
    api_version: v1
    kind: Namespace
    name: "{{ argocd_namespace }}"
    state: present

- name: Install Argo CD manifests
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    context: "{{ kube_context }}"
    namespace: "{{ argocd_namespace }}"
    src: "https://raw.githubusercontent.com/argoproj/argo-cd/{{ argocd_version }}/manifests/install.yaml"
    state: present

- name: Patch Argo CD server service to NodePort
  when: expose_argocd_server and argocd_service_type == "NodePort"
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    context: "{{ kube_context }}"
    kind: Service
    namespace: "{{ argocd_namespace }}"
    name: argocd-server
    definition:
      metadata:
        name: argocd-server
      spec:
        type: NodePort
        ports:
          - name: https
            port: 443
            targetPort: 8080
            nodePort: 30080

- name: Get Argo CD initial admin password (base64)
  kubernetes.core.k8s_info:
    kubeconfig: "{{ kubeconfig_path }}"
    context: "{{ kube_context }}"
    kind: Secret
    namespace: "{{ argocd_namespace }}"
    name: argocd-initial-admin-secret
  register: admin_secret

- name: Decode Argo CD admin password
  set_fact:
    argocd_admin_password: "{{ admin_secret.resources[0].data.password | b64decode }}"

- name: Show Argo CD admin password
  debug:
    msg: "Argo CD admin initial password is: {{ argocd_admin_password }}"

- name: Download Argo CD CLI
  become: true
  get_url:
    url: "https://github.com/argoproj/argo-cd/releases/download/{{ argocd_version }}/argocd-linux-amd64"
    dest: /usr/local/bin/argocd
    mode: '0755'

- name: Ensure Argo CD CLI is executable
  file:
    path: /usr/local/bin/argocd
    mode: '0755'
